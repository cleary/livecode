setcps 0.6

--dexed pharoh
-- ccn 67 = 4 coarse
-- ccn 68 = global cutoff
    


d3 $ stack [
        degradeBy 0.5 $ struct "<t(3,8,[0 1]) t(2,8,3)>" $ s "[808bd:3, vinylbd:2]" 
        # shape 0.5 |* gain 1.1 # speed "[1,1.02]" # size 0.7 # cutoff 1000 |* speed 0.8
        , struct "<[~ t] ~ >" $ s "drumbrute" # n "[6,3]" # speed 1 # shape 0.5
        , sometimesBy 0.34 (# n "4") $ sometimes (jux rev) $ 
          struct (inv "t(3,8,<0 2>)") $ s "drumbrute:2" # pan (segment 8 (rand))
    ]
    # verb 0.9 0.8 0.4 0.8

-- bass

d2 $ timeLoop 8 $ rotL 8
   $ every 4 (sometimes (off 0.125 ((# s "flbass:15") . (# panbus 31 (range "-1" 0 $ slow 3 sine)))))
   $ almostAlways (# cut 31) $ someCyclesBy 0.25 ("<0.25 0.125 0.5>" ~>) 
   $ struct "<t(3,8,[0 1]) t(2,8,3)>" $ arp "<thumbup>" 
   $ note ("<d'min7'<d2 d1 i>'6 <c>'min7'<o ii>'6>") # s "[flbass]"
   # gain 1.0
   # shape 0.5
   # n (segment 16 (irand 6))
   # verb 0.4 0.6 0.2 0.4
   # leslie 3 # lrate 3 # lsize 0.5
   # xsdelay 0.2
   # tsdelay 0.8
   -- # freeze "0.8?0.2"

-- lead

d7 
   $ every' 5 1 (someCyclesBy 0.4 (# cutoff 400)) 
   $ mask "<[0 1] [1] [0 0 0 1] 1>"
   $ someCyclesBy 0.25 ("<0.25 0.5>" ~>) 
   $ struct (inv "<[t*2 tf tf tf] [tf t*2 tf ~] [tfff] t(3,8,1)>") 
   $ arp "<[thumbup, up]>" $ n ( "<d4'sus4'<d2 d1 i>'16 <c4 c3>'min9'<o ii>'16>")
   # s "plaits"
   # engine 3
   # sustain 2
   # pan 0.2
   # harm (segment 16 $ range 0.1 0.9 sine)
   # timbre 0.4
   # mode 1
   |* gain 1.1
   # shape 0.4
   # cutoff 15000
   |+ n 24
   # legato "{2 1 0.5 0.8}%9"

mute 2

all $ (# hcutoff (segment 256 $ rangex 1 18000 $ slow 8 sine))

do
    all $ id
    mute 7
    mute 2
    d1 $ every' 5 1 (someCyclesBy 0.4 ((# ccv (segment 128 (range 45 0 $ slow 3 saw ))) . (# ccn 67) )) 
       $ someCyclesBy 0.25 ("<0.25 0.125 0.5>" ~>)
       $ struct (inv "<[t*2 tf tf tf] [tf t*2 tf ~] [tfff] t(3,8,1)>") 
       $ struct "t(4,8,<0 1>)"
       $ n ( "<d4'sus4'<d2 d1 i>'16 <c4 c3>'min9'<o ii>'16>")
       # s "midi0"
       # sustain 2
       # ccv 0 # ccn 67
       # ccv (segment 256 $ rangex 20 127 $ slow 2 saw) # ccn 68
       |* gain 0.5


do
    unmute 7
    unmute 2
    d4 $ stack [
       every' 4 1 (jux (# hcutoffbus 21 (segment 16 $ range 0 8000 $ slow 2 isaw)))
       $ every' 4 1 (almostNever (# verb 0 0 0 0) ) 
       $ (every' 4 1 (plyWith " 1 1 1 1 2 3 4" (bite 8 ("0 1 2 3 0 2 2 2" + "<0 1 2 3 4>") 
         . (sometimes (# djfbus 61 (segment 16 $ slow 3 saw)))))) 
       $ chop 16 $ loopAt 2 $  s "breakcore_doa_breaks" |* gain 0.8
       # shape 0.7 # verb 0.8 0.7 0.3 0.7
       , struct "<t>" $ s "[clubkick, 808bd:1]" # gain 1.0
       ]


all $ spreadf [sometimes (jux rev), id, almostNever (# accelerate "-0.75")]

do
    mute 1
    all $ (# hcutoff 2000) . (|+ note 7)
    d7 
       $ every' 5 1 (someCyclesBy 0.4 (# cutoff 400)) 
       $ sometimes (|+ up "[14 | 13 | 11 | 10]")
       $ mask "<[0 1] [1] [0 0 0 1] 1>"
       $ someCyclesBy 0.25 ("<0.25 0.5>" ~>) 
       $ struct (inv "<[t*2 tf tf tf] [tf t*2 tf ~] [tfff] t(3,8,1)>") 
       $ arp "<[thumbup, up]>" $ n ( "<d4'sus4'<d2 d1 i>'16 <c4 c3>'min9'<o ii>'16>")
       # s "plaits" # engine 2 # sustain 2 # pan 0.75
       # harm (segment 16 $ range 0.1 0.9 sine) # timbre 0.4 # mode 1
       |* gain 1.1 # shape 0.4 # cutoff 15000
       |+ n 24
       # legato "{2 1 0.5 0.8}%9"
    d4  $ every 4 (rarely (off 0.125 (# s "becklfosqrlpglaserguns") . (# cut 42)))
        $ stack [
        every' 4 1 (jux (# hcutoffbus 21 (segment 16 $ range 0 8000 $ slow 2 isaw)))
        $ every' 4 1 (almostNever (# verb 0 0 0 0) ) 
        $ (every' 4 1 (plyWith " 1 1 1 1 2 3 4" (bite 8 ("0 1 2 3 0 2 2 2" + "<0 1 2 3 4>") 
          . (sometimes (# djfbus 61 (segment 16 $ slow 3 saw)))))) 
        -- $ chop 16 
        $ loopAt 4 $ s "{breakcore_doa_breaks kvbreaks pdbreaks}%8" # cut 41 |* gain 0.8
        # shape 0.7
        # verb 0.8 0.7 0.3 0.7
        , struct "<t>" $ s "[clubkick, 808bd:1]" # gain 1.0
        # n (irand 4)
        # hcutoff 2000
        ]

all $ (#hcutoff 2000) . spreadf [sometimes (jux rev), id, almostNever (# accelerate "-1")]

all $ (#hcutoff 2000) . struct ("t(<7 13>,<8 16>,<1 0>)") . (# legato 0.4)

all $ (#hcutoff 2000) . bite 16 "1*16" . (# panbus 100 (segment 128 $ range "-1" 1 $ (slow 3 sine * perlin)) )

mute 4

do
    unmute 1
    unmute 2
    unmute 3
    unmute 4
    all $ id
    d1  $ every' 5 1 (someCyclesBy 0.4 ((# ccv (segment 128 (range 45 127 $ slow 1 saw ))) . (# ccn 67) )) 
        $ every 2 (0.128 ~>) $ struct "t(8,16,0)"
        $ n ( "<d4'sus4'<d2 d1 i>'16 <c4 c3>'min9'<o ii>'16>")
        # s "midi0" |* gain 0.7
        # ccv 0 # ccn 67 # ccv (segment 256 $ rangex 20 127 $ slow 2 saw) # ccn 68
    d7  
        $ every' 5 1 (someCyclesBy 0.4 (# cutoff 400)) 
        $ mask "<[0 1] [1] [0 0 0 1] 1>"
        $ someCyclesBy 0.25 ("<0.25 0.5>" ~>) 
        $ struct (inv "<[t*2 tf tf tf] [tf t*2 tf ~] [tfff] t(3,8,1)>") 
        $ arp "<[thumbup, up]>" $ n ( "<d4'sus4'<d2 d1 i>'16 <c4 c3>'min9'<o ii>'16>")
        # s "plaits" # engine "[3,2]" # pan 0.25
        # harm (segment 16 $ range 0.1 0.9 sine)
        # timbre 0.4 # mode 1 |* gain 1.1 # shape 0.4 # cutoff 15000
        |+ n 24 # legato "{2 1 0.5 0.8}%9"
    d4  $ every' 5 1 (someCyclesBy 0.4 (# silence)) 
        $ stack [
            every' 4 1 (jux (# hcutoffbus 21 (segment 16 $ range 0 8000 $ slow 2 isaw)))
            $ every' 4 1 (almostNever (# verb 0 0 0 0) ) 
            $ (every' 4 1 (plyWith " 1 1 1 1 2 3 4" (bite 8 ("0 1 2 3 0 2 2 2" + "<0 1 2 3 4>") 
              . (sometimes (# djfbus 61 (segment 16 $ slow 3 saw)))))) 
            $ chop 16 $ loopAt 2 $  s "breakcore_doa_breaks"
            # shape 0.7 # verb 0.8 0.7 0.3 0.7
            , struct "<t>" $ s "[clubkick, 808bd:1]" # gain 0.8
        ]

all $ degradeBy 0.0 . (# room 0.8) . (# size 1) . (|* gain 0.8)

hush

panic


============ EXPERIMENTS ===================

do
    all $ id

    panic

do
    d1 
      -- every 2 (fastspread ($) [id, bite 8 "1*4 2*6 4*8"])
      -- $ struct "t(2,33,<0 0 0 1 0 0>)"
      $ sometimes (rolledBy 0.5)
      -- $ n "f'min9'<d1 d2 d3 o i> ~"
      $ n "[f |f | c]'<min sus4 min9 >'<d1 ii 12 iii d2 ii d3 o i 10> ~"
      # s "braids"
      # sustain "{5 1 5 1 1 0.2}%4"
      # model "<28>"
      # gain 0.9
      # color (range 0.5 0.9 $ slow 7 sine)
      # timbre "{0.7 0.5 0.7 0.7 0.5}%8"
      # pan 0.9
      |+ n 12
      # cps 0.3
      # room 0.8 # size 0.9
    d4
      $ sometimesBy 0.21 (fast 2)
      $ rarely (off 0 (
        ( # ripplescf 0.6) . 
        (# ripplesreson (range 0.5 1 $ slow 7 sine)) .
        ( # ripplesdrive "{1 3 5}%2")))
      $ struct (("<0.125 0>" ~>) . slow "<2 1 2>" $ binary "<37 201 48 245>")
      $ spreadf [arp "up down converge", rolledBy "<4 6 7>", arp "up down converge"]
      $ n "[f |f | c]'<min9 min sus4>'<d1 ii 12 iii d2 ii d3 o i 10> ~"
      # s "superfm"
      # sustain "{5 2 5 3 1}%4"
      # panbus 41 (segment 16 $ range "-0.7" 0.7 $ slow 7 sine)
      # gain "{0.8 0.9 0.8}%17"
      |* gain 0.8
      # octave 4
      # room 0.8 # size 0.9
      # voice 1

d2 
  $ mask "<0 0 [0 0 1] 1>"
  $ struct "t(3,8,<0 1 0>)"
  $ n "f'min9'<d1 d2 d3 o i> ~"
  # s "[braids]"
  # sustain "{1 2 4 2}%8"
  # model 42
  # color 0.6
  # timbre 0.5
  # gain 1.1
  # cps 0.6
  # cut 1
  # legato 0.8
  # pan 0.1 
  # verb 0.9 0.9 0.4 0.9


d3 $  stack [
        slow 2 $ struct "{ ~ t*2 ~ [~ t] ~ }%4" $ s "[drumbrute:2, linnhats:4]" 
            # cutoff 3000 # speed "2"
        , slow 2 $ struct "t(1,8,4)" $ s "industrial" |* gain 0.8 # pan 0.2
      ] # room 0.8 # sz 0.9

all $ spreadf [bite 16 "0 1 2 3 4*2 0 1 2*2 4*4", id, id, (someCyclesBy 0.4 (# accelerate "-1.5")), id, id] 
    . (|+ note (segment 32 $ irand 8 + perlin))

do
    all $ id
    d5  $ slow 2 $ struct "<[t ~ ~ [~ t]] ~ >" $ s "808bd:1" # shape 0.5
        # room 0.8 # sz 0.9


do
  mute 2
  mute 3
  mute 4

do
    unmute 1
    unmute 2
    unmute 3
    unmute 4
    all $ fast 2
    d3 $ slow 2 
      $ loopAt 4
      $ chop 16
      $ someCyclesBy 0.3 (off 0.125 (rev)  . (|* gain 0.95) . (sometimesBy 0.3 (# verb 0 0 0 0) ))
      $ every 1 (sometimesBy 0.4 (jux rev) . sometimes (off 0.125 (hurry 2)) . (|* gain 0.95))
      $ s "breakcore_new_breaks:53"
      # pan 0.55
      # shape 0.4
      # verb 0.9 0.8 0.3 0.8

all $ fast 2 . every 4 (bite 16 (irand 16) . sometimes (ply 2))

hush


